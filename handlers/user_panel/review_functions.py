from aiogram import F, Router, types, Bot
from aiogram.filters import Command, StateFilter, or_f
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove

from database.config import chat_id
from filter.chat_types import ChatTypeFilter, IsAdmin

review_private_router = Router()
review_private_router.message.filter(ChatTypeFilter(['private']))

keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–û—Ç–º–µ–Ω–∞")],
    ],
    resize_keyboard=True,
)


class ReviewState(StatesGroup):
    WaitingForReview = State()


@review_private_router.message(StateFilter("*"), Command("–æ—Ç–º–µ–Ω–∞"))
@review_private_router.message(StateFilter("*"), F.text.casefold() == "–æ—Ç–º–µ–Ω–∞")
async def cancel_handler(message: types.Message, state: FSMContext) -> None:
    current_state = await state.get_state()
    if current_state is None:
        return
    await state.clear()
    await message.answer("üö´ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")


@review_private_router.message((F.text.lower().contains('‚úçÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')) |
                               (F.text.lower() == 'review'))
@review_private_router.message(Command("review"))
async def send_review_request(message: types.Message, state: FSMContext):
    await message.answer(
        "–ú—ã –±—ã–ª–∏ –±—ã —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ. üòä\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –¥—É–º–∞–µ—Ç–µ –æ –Ω–∞—Å. üí¨", reply_markup=keyboard
    )
    await state.set_state(ReviewState.WaitingForReview)


@review_private_router.callback_query((F.data.startswith("review")))
async def send_review_request_callback_query(query: types.CallbackQuery, state: FSMContext) -> None:
    message = query.message
    await message.answer(
        "–ú—ã –±—ã–ª–∏ –±—ã —Ä–∞–¥—ã —É—Å–ª—ã—à–∞—Ç—å –≤–∞—à –æ—Ç–∑—ã–≤ –æ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ. üòä\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤—ã –¥—É–º–∞–µ—Ç–µ –æ –Ω–∞—Å. üí¨", reply_markup=keyboard
    )
    await state.set_state(ReviewState.WaitingForReview)

@review_private_router.message(ReviewState.WaitingForReview)
async def process_review(message: types.Message, state: FSMContext, bot: Bot):
    keyboard = ReplyKeyboardRemove()
    if message.text:
        user_info = f"{message.from_user.first_name}"
        if message.from_user.last_name:
            user_info += f" {message.from_user.last_name}"
        if message.from_user.username:
            user_info += f" (@{message.from_user.username})"

        await bot.send_message(
            chat_id,
            f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç {user_info}:\n\n{message.text}\n\n"
            "–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! üôè",
        )
        await message.answer(
            f"–í–∞—à –æ—Ç–∑—ã–≤ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! üåü"
            f"\n\n"
            f"–í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É —á–∞—Ç—É –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –∏–¥–µ–π –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:"
            f" <a href='https://t.me/WourldUpKg'>–ù–∞—à —á–∞—Ç</a>", reply_markup=keyboard
        )
        await state.clear()

    else:
        await message.answer(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ, —á—Ç–æ–±—ã –º—ã –∑–Ω–∞–ª–∏, —á—Ç–æ –≤—ã –¥—É–º–∞–µ—Ç–µ. üòä"
        )
